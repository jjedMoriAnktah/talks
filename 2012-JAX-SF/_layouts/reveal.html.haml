:plain
    <!doctype html>
    <html lang="en">

    <head>
        <meta charset="utf-8">

        <title></title>

        <meta name="description" content=""> 
        <meta name="author" content="Lincoln Baxter, III">

        <meta name="apple-mobile-web-app-capable" content="yes"/>
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/>

        <link rel="shortcut icon" href="assets/images/favicon.ico" />

        <link rel="stylesheet" href="stylesheets/reset.css">
        <link rel="stylesheet" href="stylesheets/main.css">
        <link rel="stylesheet" href="lib/google-code-prettify/prettify.css">
        <link rel="stylesheet" href="stylesheets/print.css" media="print">
        <link rel="stylesheet" href="stylesheets/conf.css">
        
        <script src="lib/jquery-1.7.2.min.js"></script>
        <script src="js/swfobject.js"></script>

        <script type="text/javascript">
           // This function is automatically called by the player once it loads
           function onYouTubePlayerReady(playerId) {
           }

           function loadPlayer(videoId) {
              // Lets Flash from another domain call JavaScript
              var params = { allowScriptAccess: "always" };
              // The element id of the Flash embed
              var atts = { id: videoId };

              // All of the magic handled by SWFObject (http://code.google.com/p/swfobject/)
           $(document).ready(function () {
              swfobject.embedSWF("http://www.youtube.com/v/" + videoId +
                                 "?version=3&enablejsapi=1&rel=0&hd=1&playerapiid=" + videoId + "_id",
                                 videoId, "800", "600", "9", null, null, params, atts);

              Reveal.addEventListener(videoId, function () {
                 // The player ID comes from the "playerapiid" parameter that was set
                 // when the embedded player was loaded
                 var player = document.getElementById(videoId);
                 player.playVideo();
              }, false);
           });

           }
        </script>
    </head>

    <body>

    <div class="reveal">

    <!-- Used to fade in a background when a specific slide state is reached -->
    <div class="state-background"></div>

    <!-- Any section element inside of this container is displayed as a slide -->
    <div class="slides">
~ content
:plain
    </div>

    <!-- The navigational controls UI -->
    <aside class="controls">
        <a class="left" href="#">&#x25C4;</a>
        <a class="right" href="#">&#x25BA;</a>
        <a class="up" href="#">&#x25B2;</a>
        <a class="down" href="#">&#x25BC;</a>
    </aside>

    <!-- Displays presentation progress, max value changes via JS to reflect # of slides -->
    <div class="progress"><span></span></div>

    </div>

    <!-- Optional libraries for code syntax highlighting and classList support in IE9 -->
        <script src="lib/google-code-prettify/prettify.js"></script>
        <script src="lib/classList.js"></script>
        <script src="js/reveal.js"></script>
        <script src="js/code_highlight.js"></script>

    <script>
        // Parse the query string into a key/value object
        var query = {};
        location.search.replace(/[A-Z0-9]+?=(\w*)/gi, function (a) {
            query[ a.split('=').shift() ] = a.split('=').pop();
        });

        // Fires each time a new slide is activated
        Reveal.addEventListener('slidechanged', function (event) {
            // event.previousSlide, event.currentSlide, event.indexh, event.indexv
        });

        $(document).ready(function () {
        Reveal.initialize({
            // Display controls in the bottom right corner
            controls:false,

            // Display a presentation progress bar
            progress:true,

            // If true; each slide will be pushed to the browser history
            history:true,

            // Loops the presentation, defaults to false
            loop:false,

            // Flags if mouse wheel navigation should be enabled
            mouseWheel:false,

            // Apply a 3D roll to links on hover
            rollingLinks:false,

            // UI style
            theme:query.theme || 'default', // default/neon

            // Transition style
            transition:'linear' // || query.transition || 'default' // default/cube/page/concave/linear(2d)
        });
        CodeHighlight.initialize({reveal: Reveal});
        prettyPrint();
        });


    </script>
    </body>
    </html>
